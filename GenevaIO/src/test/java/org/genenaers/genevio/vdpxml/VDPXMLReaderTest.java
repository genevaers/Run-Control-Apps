/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.genenaers.genevio.vdpxml;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.IOException;

/*
 * Copyright Contributors to the GenevaERS Project. SPDX-License-Identifier: Apache-2.0 (c) Copyright IBM Corporation 2008.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;

import com.google.common.flogger.FluentLogger;

import org.genevaers.genevaio.vdpxml.VDPXMLSaxIterator;
import org.genevaers.genevaio.wbxml.RecordParser;
import org.genevaers.utilities.GenevaLog;
import org.genevaers.repository.Repository;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInfo;

public class VDPXMLReaderTest {
    private static final FluentLogger logger = FluentLogger.forEnclosingClass();
    public static final String TEST_FILE = "CTLView.xml";
    static final String resources = "./src/test/resources/";

    @BeforeEach
    public void initEach(TestInfo info){
        Repository.clearAndInitialise();
        RecordParser.clearAndInitialise();
        java.nio.file.Path target = Paths.get("target/test-logs/");
        target.toFile().mkdirs();
        GenevaLog.initLogger(VDPXMLReaderTest.class.getName(), target.resolve(info.getDisplayName()).toString(), Level.FINE);
    }

    @AfterEach
    public void afterEach(TestInfo info){
		GenevaLog.closeLogger(VDPXMLReaderTest.class.getName());
    }

    @Test
    public void testOpenVDPXMLFile() throws Exception {
        VDPXMLSaxIterator vdpxmlReader = new VDPXMLSaxIterator();
        Path root = Paths.get(resources);
        Path readme = root.resolve(TEST_FILE);
        try(BufferedInputStream bis = new BufferedInputStream(new FileInputStream(readme.toFile()))) {
            vdpxmlReader.setInputBuffer(bis);
            vdpxmlReader.addToRepository();
        }  catch (IOException e ) {
            logger.atSevere().log("testOpenVDPXMLFile failed: %s",e.getMessage());
        }
        assertEquals(1, Repository.getViews().size());
    }

}
