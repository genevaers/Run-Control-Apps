---
#Use this template as a starting point
#Copy it and delete the comments as you fill in the details
#
#Seven or fewer characters in the name
#Uppercase please
name: "SPEC01"
title: "An example test specification"
description: "More verbiage. Not the possible line continuation\
  \ even more verbiage"
#The category maps to the directory path below the Spec directory
#Which is where the spec file should be located
#PeTests is where the performance engine tests are
#Feel free to use a different base directory during development
#Then use a name for the kind of tests e.g. Arithmetic
category: "PeTests/Arithmetic"
cq: ""
note: ""
#There can be many tests.
#note the '-' that makes an array member
#and is required at the start of each test
tests:
#again 7 characters - try to make it meaningful
- name: "TEST01"
  #don't worry about header can make the same as the test name 
  header: "TEST01"
  description: "What are we trying to prove/exercise?"
  #Trying to make them all WBXML - but could be database.
  #Ask for details
  source: "WBXML"
  #List of WBXML files - yes there could be more than one
  #But probably not
  #Expected to be in the xml directory of the test framework
  xmlfiles:
  - name: "test.xml"
  #List of input data sets - for the moment called event files
  #the filename is relative to the TEST_HLQ.INPUT
  #you can use an absoulte DSN as well
  eventfiles:
  - ddname: "TESTIN" #needs to match what is in the PF DDName
    filename: "MYDATA"
  #List of reference files - just like event files
  # omit if no reference phase required
  reffiles:
  - ddname: "LOOKUP"
    filename: "MY.LOOKUP"
  #Extract output 
  # The ddname needs to match the PF defined in the view
  # for an extract only view
  # For a format phase it will be EXTR00n where n is defined in the view
  extractfiles:
  - ddname: "EXTR001" 
    space: "TRK"
    primary: "1"
    secondary: "1"
    recfm: "VB"
    lrecl: "300"
  #Format file definition 
  # omit if no format phase required
  formatfiles:
  - ddname: "FMTOUT01" #needs to match the PF defined in the view
    space: "CYL"
    primary: "1"
    secondary: "1"
    recfm: "VB"
    lrecl: "300"
  #The following can be left off. It is the default.
  #But if the test is expected to fail in some way set the type and rc
  expectedresult:
    type: "success" #Possible values 'abend', 'jclerror', 'badrc'
    rc: "0"
#Rinse and repeat with a new set of entries 
- name: "TEST02"
  header: "CMARITH"
  description: "Compare accumulated, prior, looked up, referenced, const and event\
    \ values"
  source: "WBXML"
  xmlfiles:
  - name: "CMP_ARITH_PLUS.xml"
    
  eventfiles:
  - ddname: "ALLTYPE"
    filename: "CMPTYPE"
  reffiles:
  - ddname: "LKUPALL"
    filename: "CMPTYPE.AL"
  extractfiles:
  - ddname: "EXTR001"
    space: "TRK"
    primary: "1"
    secondary: "1"
    recfm: "VB"
    lrecl: "300"
  formatfiles:
  - ddname: "FMTOUT01"
    space: "CYL"
    primary: "1"
    secondary: "1"
    recfm: "VB"
    lrecl: "300"
