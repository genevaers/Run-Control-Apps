<#ftl strip_whitespace="true">
<#assign importList = [] />
<#assign javaList = false />
package org.genevaers.genevaio.vdpfile;

<#list imports as i>
import ${i};
</#list>

import java.io.FileWriter;
import java.io.IOException;
<#if javaList>
import java.util.ArrayList;
import java.util.List;
</#if>
import org.genevaers.genevaio.fieldnodes.NumericFieldNode;
import org.genevaers.genevaio.fieldnodes.FieldNodeBase;
import org.genevaers.genevaio.fieldnodes.NoComponentNode;
import org.genevaers.genevaio.fieldnodes.RecordNode;
import org.genevaers.genevaio.fieldnodes.StringFieldNode;
import org.genevaers.genevaio.recordreader.RecordFileReaderWriter;
import org.genevaers.genevaio.recordreader.RecordFileReaderWriter.FileRecord;

/**
 * This class was automatically generated by the GenevaERS Component Generator.
 * 
 * DO NOT EDIT
 * 
 * ${entries.fieldEntries?size} fields
 */
public class ${record.recordName}  extends VDPFileObject
{
<#list entries.fieldEntries as field>
${field}
</#list>

<#list entries.gettersAndSetters as getAndSetEntry>
${getAndSetEntry}
</#list>

    @Override
    public void readRecord(VDPFileRecordReader reader, FileRecord rec)
        throws Exception
    {
<#list entries.readers as readerEntry>
${readerEntry}
</#list>
    }

<#if record.recordId gt 0>
    @Override
   	public void addRecordNodes(FieldNodeBase root, boolean compare)
    {
        RecordNode rn = new RecordNode();
<#if record.recordId == 400>
        rn.setName(recordType + "_" + lrId + "_" + fieldName);
<#elseif record.recordId == 2000>
        rn.setName(viewId + "_" + recordType + "_" + columnId);
<#elseif record.recordId == 2201 || record.recordId == 2210>
        rn.setName(viewId + "_" + columnId);
<#elseif record.recordId == 1210>
        rn.setName(viewId + "_" + sequenceNbr);
<#else>
        rn.setName(recordType + "_" + recordId + "_" + sequenceNbr);
</#if>
        rn = (RecordNode) root.add(rn, compare);
<#else>
    @Override
   	public void addRecordNodes(FieldNodeBase root, boolean compare)
    {
    }
   	public void addRecordNodes(FieldNodeBase rn, int n, boolean compare)
    {
</#if>
<#list entries.fieldNodeEntries as fieldNodeEntry>
${fieldNodeEntry}
</#list>
    }


    @Override
    public void writeCSV(FileWriter fw) throws IOException
    {
<#list entries.csvEntries as csvEntry>
${csvEntry}
</#list>
    }

    @Override
    public void writeCSVHeader(FileWriter fw) throws IOException
    {
<#list entries.csvHeaders as csvHeader>
${csvHeader}
</#list>
    }

<#if record.componentName != "none">
    public void populateComponent(org.genevaers.repository.components.${record.componentName} component) {
<#list entries.componentEntries as compEntry>
${compEntry}
</#list>
    }
    public void fillFromComponent(org.genevaers.repository.components.${record.componentName} component) {
<#list entries.fillFromComponentEntries as fillEntry>
${fillEntry}
</#list>
    }
</#if>
    @Override
    public void fillTheWriteBuffer(RecordFileReaderWriter readerWriter) {
        org.genevaers.genevaio.recordreader.RecordFileReaderWriter.FileRecord buffer = readerWriter.getRecordToFill();
<#if record.recordId gt 0>
        recLen = (short)${record.recordLength?c};
        recordType = ${record.recordId?c};
</#if>
<#list entries.fillTheWriteBufferEntries as fillEntry>
${fillEntry}
</#list>
    }   
}
